@model RMS.Model.RegistrationModel
<section class="content-header">
    <h1 style="text-align: center;">
        Edit Details

    </h1>

</section>
<section class="content">
    <div class="box box-info">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @*<h4>RegistrationModel</h4>*@
                @if (!string.IsNullOrWhiteSpace(ViewBag.ResponseMessage))
                {
                    <label class="text-success">@ViewBag.ResponseMessage</label>
                }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class=" box-body">


                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedByUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.CreatedByUserId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedByUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">

                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update Now" class="btn btn-primary" />
                        </div>
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "EntryList")
                    </div>
                </div>
                </div>
        }
        
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
