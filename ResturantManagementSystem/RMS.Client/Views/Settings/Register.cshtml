@model RMS.Model.RegistrationModel
@{
    ViewBag.Settings = "active";
    //ViewBag.Register = "active";
   // int i = 10;
}
<section class="content-header">
    <h1 style="text-align: center;">
        Add Details 

    </h1>
    @*<ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Forms</a></li>
            <li class="active">General Elements</li>
        </ol>*@
</section>
<section class="content">
    <div class="box box-info">
        @*<div class="box-header with-border">
            <h3 class="box-title">Update Profile</h3>
        </div>*@
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
               @if(!string.IsNullOrWhiteSpace(ViewBag.ResponseMessage))
               {
                   <label class="text-success">@ViewBag.ResponseMessage</label>
               }
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class=" box-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EnumDropDownListFor(model => model.Gender, "- Select Gender -", new { @class = "form-control" } )
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", onblur = "get_mail(this.value)" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedByUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.CreatedByUserName, new { htmlAttributes = new { @class = "form-control",onkeypress="func()" } })
                            @Html.ValidationMessageFor(model => model.CreatedByUserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "" } })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                </div>
        }

        
        </div>
</section>
@section scripts {
   <script type="text/javascript">
       $(document).ready(function(){
           //alert("hello");

       });
       function get_mail(val) {
           var model = {
               "Email":val,
           }
           console.log(model);
           $.ajax({
               method: 'post',
               url: '/Settings/GetMail',
               dataType:"json",
               data: model,
               success: function(responce){
                   console.log(responce);
                   if (responce==true) {
                       alert('Email exist');
                   } else {
                       alert('Not exist');
                   }
               },
               error: function (response) {
                   console.log(response);
               }



           });
               
               
              
       }
       function func()
       {
           //alert("hello");
       }
    </script>
}
